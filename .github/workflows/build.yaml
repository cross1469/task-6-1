name: Build And Push Image

on:
  push:
    tags:
      - "v*"
env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: task-6-1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x" # 請確認這是一個有效的 Node.js 版本
      - run: npm install
        working-directory: webapp/src
      - run: npm test
        working-directory: webapp/src
      - run: npm run lint
        working-directory: webapp/src

  build-and-deploy:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Install Docker Scout
        run: |
          curl -sSfL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh -s --
          echo "/home/runner/.docker/cli-plugins" >> $GITHUB_PATH
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.ECR_REPOSITORY }} # 確保這裡引用了設置在全局環境變量中的 ECR_REPOSITORY
          IMAGE_TAG: ${{ github.ref_name }}
        working-directory: webapp/src
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker scout quickview $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
